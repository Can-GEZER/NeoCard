name: Android CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Clean project
      run: ./gradlew clean
      
    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace
      
    - name: Build release APK
      run: ./gradlew assembleRelease --stacktrace
      continue-on-error: true
      
    - name: Upload debug APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    - name: Upload release APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: app/build/outputs/apk/release/*.apk
        retention-days: 30

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run unit tests
      run: ./gradlew testDebugUnitTest --stacktrace
      
    - name: Generate test coverage report
      run: ./gradlew jacocoTestReport --stacktrace
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          app/build/reports/tests/testDebugUnitTest/
          app/build/test-results/testDebugUnitTest/
        retention-days: 30
        
    - name: Upload coverage report HTML
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-html
        path: app/build/reports/jacoco/jacocoTestReport/html/
        retention-days: 30
        
    - name: Upload coverage report XML
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-xml
        path: app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
        retention-days: 30
        
    - name: Upload to Codecov (optional)
      if: always()
      uses: codecov/codecov-action@v4
      with:
        files: app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
        flags: unittests
        name: codecov-neocard
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run lint
      run: ./gradlew lintDebug --stacktrace
      continue-on-error: true
      
    - name: Upload lint results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: lint-results
        path: |
          app/build/reports/lint-results*.html
          app/build/reports/lint-results*.xml
        retention-days: 30

  ci-status:
    name: CI Status Summary
    runs-on: ubuntu-latest
    needs: [build, test, lint]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Comment PR with CI results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const buildStatus = '${{ needs.build.result }}' === 'success' ? '‚úÖ' : '‚ùå';
          const testStatus = '${{ needs.test.result }}' === 'success' ? '‚úÖ' : '‚ùå';
          const lintStatus = '${{ needs.lint.result }}' === 'success' ? '‚úÖ' : '‚ö†Ô∏è';
          
          let comment = '## ü§ñ CI Build Results\n\n';
          comment += '### Job Status\n';
          comment += `- **Build:** ${buildStatus} Build APK\n`;
          comment += `- **Tests:** ${testStatus} Unit Tests with Coverage\n`;
          comment += `- **Lint:** ${lintStatus} Lint Check\n\n`;
          
          comment += '### üì¶ Artifacts\n';
          comment += '- ‚úÖ Debug APK: Available in workflow artifacts\n';
          comment += '- ‚úÖ Test Results: Available in workflow artifacts\n';
          comment += '- ‚úÖ Coverage Report (HTML): Available in workflow artifacts\n';
          comment += '- ‚úÖ Coverage Report (XML): Available in workflow artifacts\n';
          comment += '- ‚úÖ Lint Report: Available in workflow artifacts\n\n';
          
          comment += '_Generated by GitHub Actions_';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
